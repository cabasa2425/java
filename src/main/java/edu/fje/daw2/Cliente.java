/**
 * Representa un cliente de la biblioteca.
 * Esta clase es abstracta y define atributos y m√©todos comunes para todos los tipos de clientes.
 */
package edu.fje.daw2;

import java.util.ArrayList;
import java.util.List;

public abstract class Cliente {

    /** ID √∫nico del cliente */
    protected int idCliente;

    /** Nombre del cliente */
    protected String nombre;

    /** Correo electr√≥nico del cliente */
    protected String correo;

    /** Tel√©fono del cliente */
    protected int telefono;

    /** L√≠mite de pr√©stamos del cliente */
    protected int limitePrestamos;

    /** Lista de pr√©stamos realizados por el cliente */
    protected List<Prestamo> prestamosRealizados;

    /**
     * Constructor de la clase Cliente.
     * @param idCliente ID √∫nico del cliente
     * @param nombre Nombre del cliente
     * @param correo Correo electr√≥nico del cliente
     * @param telefono Tel√©fono del cliente
     * @param limitePrestamos L√≠mite de pr√©stamos permitido
     */
    public Cliente(int idCliente, String nombre, String correo, int telefono, int limitePrestamos) {
        this.idCliente = idCliente;
        this.nombre = nombre;
        this.correo = correo;
        this.telefono = telefono;
        this.limitePrestamos = limitePrestamos;
        this.prestamosRealizados = new ArrayList<>();
    }

    /**
     * Obtiene el nombre del cliente.
     * @return Nombre del cliente
     */
    public String getNombre() {
        return nombre;
    }

    /**
     * Establece un nuevo nombre para el cliente.
     * @param nombre Nuevo nombre del cliente
     */
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    /**
     * Obtiene el ID del cliente.
     * @return ID del cliente
     */
    public int getIdCliente() {
        return idCliente;
    }

    /**
     * Establece un nuevo ID para el cliente.
     * @param idCliente Nuevo ID del cliente
     */
    public void setIdCliente(int idCliente) {
        this.idCliente = idCliente;
    }

    /**
     * Obtiene el correo electr√≥nico del cliente.
     * @return Correo del cliente
     */
    public String getCorreo() {
        return correo;
    }

    /**
     * Establece un nuevo correo electr√≥nico para el cliente.
     * @param correo Nuevo correo del cliente
     */
    public void setCorreo(String correo) {
        this.correo = correo;
    }

    /**
     * Obtiene el tel√©fono del cliente.
     * @return Tel√©fono del cliente
     */
    public int getTelefono() {
        return telefono;
    }

    /**
     * Establece un nuevo tel√©fono para el cliente.
     * @param telefono Nuevo tel√©fono del cliente
     */
    public void setTelefono(int telefono) {
        this.telefono = telefono;
    }

    /**
     * Agrega un pr√©stamo a la lista de pr√©stamos realizados por el cliente.
     * @param prestamo Pr√©stamo a agregar
     */
    public void agregarPrestamo(Prestamo prestamo) {
        prestamosRealizados.add(prestamo);
    }

    /**
     * Obtiene la lista de pr√©stamos realizados por el cliente.
     * @return Lista de pr√©stamos realizados
     */
    public List<Prestamo> getPrestamosRealizados() {
        return prestamosRealizados;
    }

    /**
     * Muestra todos los pr√©stamos realizados por el cliente.
     */
    public void mostrarPrestamosRealizados() {
        if (prestamosRealizados.isEmpty()) {
            System.out.println("‚ùå No hay pr√©stamos realizados a√∫n.");
        } else {
            System.out.println("\nüìö TODOS LOS PRESTAMOS REALIZADOS üìö");
            for (Prestamo prestamo : prestamosRealizados) {
                System.out.println(prestamo);
                System.out.println("------------------------------");
            }
        }
    }

    /**
     * M√©todo abstracto para obtener el tipo de cliente.
     * @return Tipo de cliente como String
     */
    public abstract String tipoCliente();

    /**
     * Representaci√≥n en cadena del objeto Cliente.
     * @return Informaci√≥n del cliente en formato String
     */
    @Override
    public String toString() {
        return "ID Cliente: " + idCliente + "\nNombre: " + nombre + "\nCorreo: " + correo +
                "\nTel√©fono: " + telefono + "\nL√≠mite de pr√©stamos: " + limitePrestamos +
                "\nPr√©stamos realizados: " + prestamosRealizados.size();
    }
}